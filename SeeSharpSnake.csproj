<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>net7.0</TargetFramework>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <PublishSingleFile Condition="'$(Mode)' == ''">true</PublishSingleFile>
    <PublishAot Condition="'$(Mode)' != ''">true</PublishAot>
    <EnableDefaultItems>false</EnableDefaultItems>
    <LangVersion>8.0</LangVersion>
  </PropertyGroup>

  <ItemGroup>
    <Compile Include="Game/FrameBuffer.cs" />
    <Compile Include="Game/Game.cs" />
    <Compile Include="Game/Random.cs" />
    <Compile Include="Game/Snake.cs" />
  </ItemGroup>

  <ItemGroup Condition="'$(IncludePal)' == 'true'">
    <Compile Include="Pal/Thread.Windows.cs" />
    <Compile Include="Pal/Environment.Windows.cs" />
    <Compile Include="Pal/Console.Windows.cs" />
    <Compile Include="Pal/Console.cs" />
  </ItemGroup>

  <ItemGroup Condition="'$(IncludePal)' == 'true' and $(RuntimeIdentifier.StartsWith('win-'))">
    <Compile Include="Pal/RuntimeInformation.Windows.cs" />
  </ItemGroup>

  <ItemGroup Condition="'$(IncludePal)' == 'true' and $(RuntimeIdentifier.StartsWith('linux-'))">
    <Compile Include="Pal/RuntimeInformation.Linux.cs" />
  </ItemGroup>

  <ItemGroup Condition="'$(Mode)' == 'NativeAOT-NoRuntime' or '$(Mode)' == 'NativeAOT-Uefi'">
    <Compile Include="MiniBCL.cs" />
    <Compile Include="MiniRuntime.cs" />
    <Compile Include="MiniRuntime.Dos.cs" />
  </ItemGroup>

  <ItemGroup Condition="'$(Mode)' == 'NativeAOT-Uefi'">
    <Compile Include="Pal/Thread.Uefi.cs" />
    <Compile Include="Pal/Environment.Uefi.cs" />
    <Compile Include="Pal/Console.Uefi.cs" />
    <Compile Include="Pal/Console.cs" />
    <Compile Include="Pal/UefiEnvironment.cs" />
    <Compile Include="Pal/UefiApplication.cs" />
    <Compile Include="Pal/RuntimeInformation.Uefi.cs" />
  </ItemGroup>

  <PropertyGroup Condition="'$(Mode)' == 'NativeAOT-Moderate' or '$(Mode)' == 'NativeAOT-ReflectionFree' or '$(Mode)' == 'NativeAOT-ReflectionFree-UPX'">
    <IlcGenerateCompleteTypeMetadata>false</IlcGenerateCompleteTypeMetadata>
    <IlcOptimizationPreference>Size</IlcOptimizationPreference>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Mode)' == 'NativeAOT-ReflectionFree' or '$(Mode)' == 'NativeAOT-ReflectionFree-UPX' or '$(Mode)' == 'NativeAOT-NoRuntime'">
    <IlcGenerateStackTraceData>false</IlcGenerateStackTraceData>
    <IlcInvariantGlobalization>true</IlcInvariantGlobalization>
    <IlcFoldIdenticalMethodBodies>true</IlcFoldIdenticalMethodBodies>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Mode)' == 'NativeAOT-ReflectionFree' or '$(Mode)' == 'NativeAOT-ReflectionFree-UPX'">
    <IlcDisableReflection>true</IlcDisableReflection>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Mode)' == 'NativeAOT-NoRuntime' or '$(Mode)' == 'NativeAOT-Uefi'">
    <NoStdLib>true</NoStdLib>
    <NoConfig>true</NoConfig>
    <RuntimeMetadataVersion>v4.0.30319</RuntimeMetadataVersion>
    <Optimize>true</Optimize>
    <IlcOptimizationPreference>Size</IlcOptimizationPreference>
    <IlcDisableReflection>true</IlcDisableReflection>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
    <GenerateTargetFrameworkAttribute>false</GenerateTargetFrameworkAttribute>
    <IlcSystemModule>SeeSharpSnake</IlcSystemModule>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Mode)' == 'NativeAOT-NoRuntime'">
    <IncludePal>true</IncludePal>
  </PropertyGroup>

  <ItemGroup Condition="'$(Mode)' == 'NativeAOT-NoRuntime'">
    <LinkerArg Include="/subsystem:console /entry:__managed__Main /merge:.modules=.rdata /merge:.pdata=.rdata /DYNAMICBASE:NO /filealign:16 /align:16" />
  </ItemGroup>

  <ItemGroup Condition="'$(Mode)' == 'NativeAOT-Uefi'">
    <LinkerArg Include="/subsystem:EFI_APPLICATION /entry:EfiMain" />
  </ItemGroup>

  <ItemGroup Condition="'$(Mode)' == 'NativeAOT-UPX' or '$(Mode)' == 'NativeAOT-ReflectionFree-UPX'">
    <PackageReference Include="PublishAotCompressed" Version="0.0.4" />
  </ItemGroup>

  <Target Name="CustomizeReferences" BeforeTargets="BeforeCompile" AfterTargets="FindReferenceAssembliesForReferences"
          Condition="'$(Mode)' == 'NativeAOT-NoRuntime' or '$(Mode)' == 'NativeAOT-Uefi'">
    <ItemGroup>
      <ReferencePathWithRefAssemblies Remove="@(ReferencePathWithRefAssemblies)" />
      <ReferencePath Remove="@(ReferencePath)" />
    </ItemGroup>
  </Target>
  
  <Target Name="GenerateVirtuaDisk" AfterTargets="Publish"
          Condition="'$(Mode)' == 'NativeAOT-Uefi'">
    <PropertyGroup>
      <VHD>$(MSBuildProjectDirectory)\$(NativeOutputPath)seesharpsnake.vhdx</VHD>
      <CreatePartitionCommand>
        create vdisk file=$(VHD) maximum=40
        select vdisk file=$(VHD)
        attach vdisk
        convert gpt
        create partition efi
        format quick fs=fat32 label="System"
        assign letter="X"
        exit
      </CreatePartitionCommand>
      <CreatePartitionCommand2>
        select vdisk file=$(VHD)
        select partition 1
        remove letter=X
        detach vdisk
        exit
      </CreatePartitionCommand2>
    </PropertyGroup>

    <Delete Files="$(VHD)" />

    <WriteLinesToFile File="$(NativeOutputPath)diskpart1.txt" Overwrite="true" Lines="$(CreatePartitionCommand)" />

    <WriteLinesToFile File="$(NativeOutputPath)diskpart2.txt" Overwrite="true" Lines="$(CreatePartitionCommand2)" />
    <Exec Command="diskpart /s &quot;$(MSBuildProjectDirectory)\$(NativeOutputPath)diskpart1.txt&quot;" />
    <Copy SourceFiles="$(MSBuildProjectDirectory)\$(NativeOutputPath)$(TargetName)$(NativeBinaryExt)" DestinationFiles="X:\EFI\BOOT\BOOTX64.efi" />
    <Exec Command="diskpart /s &quot;$(MSBuildProjectDirectory)\$(NativeOutputPath)diskpart2.txt&quot;" />
  </Target>

  <!-- The AOT compiler would want to mirror these as AppContext switches. Prevent that. -->
  <Target Name="RemoveHostConfigurationOptions" BeforeTargets="WriteIlcRspFileForCompilation" DependsOnTargets="PrepareForILLink" Condition="'$(Mode)' == 'NativeAOT-NoRuntime'">
    <ItemGroup>
      <RuntimeHostConfigurationOption Remove="@(RuntimeHostConfigurationOption)" />
    </ItemGroup>
  </Target>

</Project>
